{"ast":null,"code":"var _jsxFileName = \"/home/dioram/Henry/FT-M2-master/EjerciciosExtras/homework/src/components/CommentsPost/CommentsPost.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getAllCommentsPosts } from '../../actions/index';\nimport './CommentsPost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class CommentsPost extends React.Component {\n  componentDidMount() {\n    const id = this.props.id;\n    this.props.getAllCommentsPost(id).then(c => {\n      console.log(\"Comentarios cargados con éxito...\");\n    }).catch(err => console.error(err));\n  }\n  render() {\n    const idPost = this.props.id;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Comentarios del Post \", idPost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), !this.props.commentsPost ? console.log(\"Espero ...\") : this.props.commentsPost.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [comment.id, \" - \", comment.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), comment.body]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport function mapStateToProps(state) {\n  return {\n    commentsPost: state.commentsPost\n  };\n}\nexport function mapDispatchToProps(dispatch) {\n  return {\n    getAllCommentsPost: id => dispatch(getAllCommentsPosts(id))\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentsPost);","map":{"version":3,"names":["React","connect","getAllCommentsPosts","CommentsPost","Component","componentDidMount","id","props","getAllCommentsPost","then","c","console","log","catch","err","error","render","idPost","commentsPost","map","comment","name","body","mapStateToProps","state","mapDispatchToProps","dispatch"],"sources":["/home/dioram/Henry/FT-M2-master/EjerciciosExtras/homework/src/components/CommentsPost/CommentsPost.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { getAllCommentsPosts } from '../../actions/index';\n\nimport './CommentsPost.css';\n\nexport class CommentsPost extends React.Component {\n    \n     componentDidMount() {\n        const id = this.props.id\n         this.props.getAllCommentsPost(id)\n        .then(c =>{\n          console.log(\"Comentarios cargados con éxito...\")\n        })\n        .catch(err =>console.error(err))\n    }\n\n    render() {\n        const idPost = this.props.id\n        return (\n            <div className=\"details\">\n                <h4>Comentarios del Post {idPost}</h4>\n                {!this.props.commentsPost ? console.log(\"Espero ...\") : \n                this.props.commentsPost.map((comment) => (\n                  <div className= \"container\">\n                    <p key ={comment.id}> \n                    <h4>{comment.id} - {comment.name}</h4> \n                    {comment.body}\n                    </p>\n                  </div>\n              )\n             )}\n            </div>\n        )\n    }\n}\n\nexport function mapStateToProps(state) {\n  return {\n    commentsPost: state.commentsPost,\n  };\n}\n\nexport function mapDispatchToProps(dispatch) {\n    return {\n        getAllCommentsPost: (id) => dispatch(getAllCommentsPosts(id))\n    };\n  }\n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CommentsPost );"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,mBAAmB,QAAQ,qBAAqB;AAEzD,OAAO,oBAAoB;AAAC;AAE5B,OAAO,MAAMC,YAAY,SAASH,KAAK,CAACI,SAAS,CAAC;EAE7CC,iBAAiB,GAAG;IACjB,MAAMC,EAAE,GAAG,IAAI,CAACC,KAAK,CAACD,EAAE;IACvB,IAAI,CAACC,KAAK,CAACC,kBAAkB,CAACF,EAAE,CAAC,CACjCG,IAAI,CAACC,CAAC,IAAG;MACRC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAClD,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAGH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC,CAAC;EACpC;EAEAE,MAAM,GAAG;IACL,MAAMC,MAAM,GAAG,IAAI,CAACV,KAAK,CAACD,EAAE;IAC5B,oBACI;MAAK,SAAS,EAAC,SAAS;MAAA,wBACpB;QAAA,oCAA0BW,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,EACrC,CAAC,IAAI,CAACV,KAAK,CAACW,YAAY,GAAGP,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC,GACrD,IAAI,CAACL,KAAK,CAACW,YAAY,CAACC,GAAG,CAAEC,OAAO,iBAClC;QAAK,SAAS,EAAE,WAAW;QAAA,uBACzB;UAAA,wBACA;YAAA,WAAKA,OAAO,CAACd,EAAE,SAAKc,OAAO,CAACC,IAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QAAM,EACrCD,OAAO,CAACE,IAAI;QAAA,GAFJF,OAAO,CAACd,EAAE;UAAA;UAAA;UAAA;QAAA;MAGf;QAAA;QAAA;QAAA;MAAA,QAET,CACD;IAAA;MAAA;MAAA;MAAA;IAAA,QACI;EAEd;AACJ;AAEA,OAAO,SAASiB,eAAe,CAACC,KAAK,EAAE;EACrC,OAAO;IACLN,YAAY,EAAEM,KAAK,CAACN;EACtB,CAAC;AACH;AAEA,OAAO,SAASO,kBAAkB,CAACC,QAAQ,EAAE;EACzC,OAAO;IACHlB,kBAAkB,EAAGF,EAAE,IAAKoB,QAAQ,CAACxB,mBAAmB,CAACI,EAAE,CAAC;EAChE,CAAC;AACH;AAEA,eAAeL,OAAO,CACpBsB,eAAe,EACfE,kBAAkB,CACnB,CAACtB,YAAY,CAAE"},"metadata":{},"sourceType":"module"}